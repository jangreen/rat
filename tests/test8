//let rfe = rf & ext
let rf = rfi | rfe
let po-loc = po & loc
let fr = rf^-1;co


// TSO
let uniproc = (po-loc | rf)^+ & id
let ghb-tso = (po| rfe)^+ & id

let tso = ghb-tso | uniproc

// OOTA
let oota = (dep | rf)^+ & id

// Assumptions
assume (dep | rfi)^+ <= po
assume rf;rf <= 0

// Goal
assume tso <= 0
assert oota <= 0