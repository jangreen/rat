let rf = (rfe | rfi) & W*R
let po = pos & (W*W | W*R | R*R | R*W) 

// section 3.6
let eco = (co | rf | fr)+
let ppo = [R]; po | po ; [W] //| po ; [F] | [UW|F] ; po 
let tso1 = (ppo | rfe | co | fr)


let hb = (po | rf)+
let tso2 = co | ([F]|[W]);hb;([F]|[W]) | ([F] | rfe);po;fr

assume rf;rf <= 0
assume (rfi | po)+ <= po
assume (tso1+ | po;eco) & id <= 0

assert (hb | hb;fr | tso2+) & id <= 0